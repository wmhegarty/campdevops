
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies{
     classpath files('./libs/gradle-docker-tools-1.0.0-SNAPSHOT.jar')
     classpath 'org.codehaus.groovy:groovy-all:2.3.3'
     classpath 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
     classpath 'com.gmongo:gmongo:1.0'
    }
}

import com.wmhegarty.docker.Docker
import com.gmongo.GMongo

def docker = new Docker()

task buildApp << {
    docker.build("app","latest",'./sinatra')
}

task buildMongo << {
    docker.build("mongodb","latest",'./mongodb')
}

task buildData << {
    docker.build("data-volume","latest",'./data-volume')
}

task startApp << {
    def options = [ ports: ['4567:4567'],
                    name: "app",
                    link: "mongodb:mongodb"]
    docker.runImage("app", "latest",options)
}

task startMongo << {
    def options = [ ports: ['27017:27017',"28017:28017"],
                    name: "mongodb",
                    volumesFrom: ['data-volume']]

    docker.runImage("mongodb", "latest",options)

}

task startData << {
    docker.runImage("data-volume", "latest",[name: "data-volume"])
}

task stopApp << {
    docker.stopContainer('app')
    docker.removeContainer('app')   
}

task stopMongo << {
    docker.stopContainer('mongodb')
    docker.removeContainer('mongodb')
}

task stopData << {
    docker.stopContainer('data-volume')
    docker.removeContainer('data-volume')
}

task createData << {
    sleep(2*1000)
    def mongo = new GMongo('192.168.59.103')
    def db = mongo.getDB("example-db")
    db['example-collection'].insert(['_id' : 'myid','firstname' : 'Bob' , 'lastname' : 'Sled'])
}

task updateData << {
    def mongo = new GMongo('192.168.59.103')
    def db = mongo.getDB("example-db")
    db['example-collection'].update(['_id' : 'myid'],['firstname' : 'Robert' , 'lastname' : 'Sled'])
}

task exportData <<
{
    docker.exportContainer('data-volume')
}

task importData <<
{
    docker.exportContainer('data-volume')
}

task newApp(dependsOn: [stopApp,startApp])

task stopAll(dependsOn: [stopApp,stopMongo,stopData])

task runAll(dependsOn: [buildApp,buildMongo,buildData,startData,startMongo,startApp,createData])

